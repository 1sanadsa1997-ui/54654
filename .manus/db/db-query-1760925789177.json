{
  "query": "\n-- Drop existing tables if they exist\nDROP TABLE IF EXISTS notifications;\nDROP TABLE IF EXISTS admin_actions;\nDROP TABLE IF EXISTS ad_revenue;\nDROP TABLE IF EXISTS level_requests;\nDROP TABLE IF EXISTS withdrawals;\nDROP TABLE IF EXISTS referrals;\nDROP TABLE IF EXISTS user_tasks;\nDROP TABLE IF EXISTS offers;\nDROP TABLE IF EXISTS tasks;\nDROP TABLE IF EXISTS transactions;\nDROP TABLE IF EXISTS wallets;\nDROP TABLE IF EXISTS magic_link_tokens;\nDROP TABLE IF EXISTS users;\n\n-- Create users table\nCREATE TABLE users (\n  id VARCHAR(64) PRIMARY KEY,\n  username VARCHAR(50) NOT NULL UNIQUE,\n  email VARCHAR(320) NOT NULL UNIQUE,\n  fullName VARCHAR(100) NOT NULL,\n  passwordHash VARCHAR(255),\n  gender ENUM('male', 'female', 'other'),\n  birthdate DATETIME,\n  role ENUM('user', 'admin', 'super_admin') NOT NULL DEFAULT 'user',\n  status ENUM('pending', 'approved', 'suspended', 'rejected') NOT NULL DEFAULT 'pending',\n  loginMethod VARCHAR(64),\n  level INT NOT NULL DEFAULT 0,\n  referralCode VARCHAR(20) UNIQUE,\n  referredBy VARCHAR(64),\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  lastSignedIn DATETIME DEFAULT CURRENT_TIMESTAMP,\n  approvedAt DATETIME,\n  approvedBy VARCHAR(64),\n  INDEX email_idx (email),\n  INDEX username_idx (username),\n  INDEX referral_code_idx (referralCode),\n  INDEX status_idx (status)\n);\n\n-- Create magic_link_tokens table\nCREATE TABLE magic_link_tokens (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  token VARCHAR(255) NOT NULL UNIQUE,\n  userId VARCHAR(64) NOT NULL,\n  email VARCHAR(320) NOT NULL,\n  expiresAt DATETIME NOT NULL,\n  used BOOLEAN NOT NULL DEFAULT FALSE,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Create wallets table\nCREATE TABLE wallets (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL UNIQUE,\n  balance INT NOT NULL DEFAULT 0,\n  totalEarned INT NOT NULL DEFAULT 0,\n  totalWithdrawn INT NOT NULL DEFAULT 0,\n  pendingBalance INT NOT NULL DEFAULT 0,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create transactions table\nCREATE TABLE transactions (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  type ENUM('credit', 'debit', 'bonus', 'task_reward', 'referral_reward', 'withdrawal', 'level_upgrade', 'admin_adjustment') NOT NULL,\n  amount INT NOT NULL,\n  balanceBefore INT NOT NULL,\n  balanceAfter INT NOT NULL,\n  description TEXT,\n  referenceType VARCHAR(50),\n  referenceId VARCHAR(100),\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  createdBy VARCHAR(64),\n  INDEX user_id_idx (userId),\n  INDEX type_idx (type),\n  INDEX created_at_idx (createdAt),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create tasks table\nCREATE TABLE tasks (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  title VARCHAR(200) NOT NULL,\n  description TEXT NOT NULL,\n  type ENUM('manual', 'adgem', 'adsterra', 'cpalead', 'referral') NOT NULL,\n  reward INT NOT NULL,\n  proofRequired BOOLEAN NOT NULL DEFAULT TRUE,\n  maxParticipants INT,\n  currentParticipants INT NOT NULL DEFAULT 0,\n  status ENUM('active', 'paused', 'completed', 'cancelled') NOT NULL DEFAULT 'active',\n  externalId VARCHAR(100),\n  url TEXT,\n  instructions TEXT,\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  createdBy VARCHAR(64)\n);\n\n-- Create user_tasks table\nCREATE TABLE user_tasks (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  taskId INT NOT NULL,\n  status ENUM('pending', 'submitted', 'approved', 'rejected') NOT NULL DEFAULT 'pending',\n  proofUrl TEXT,\n  proofText TEXT,\n  submittedAt DATETIME,\n  reviewedAt DATETIME,\n  reviewedBy VARCHAR(64),\n  rewardAmount INT,\n  rejectionReason TEXT,\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX user_id_idx (userId),\n  INDEX task_id_idx (taskId),\n  INDEX status_idx (status),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE\n);\n\n-- Create offers table\nCREATE TABLE offers (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  platform ENUM('adgem', 'adsterra', 'cpalead') NOT NULL,\n  externalId VARCHAR(100) NOT NULL,\n  name VARCHAR(200) NOT NULL,\n  description TEXT,\n  payout INT NOT NULL,\n  url TEXT,\n  imageUrl TEXT,\n  category VARCHAR(100),\n  countries TEXT,\n  status ENUM('active', 'inactive') NOT NULL DEFAULT 'active',\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n\n-- Create referrals table\nCREATE TABLE referrals (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  referrerId VARCHAR(64) NOT NULL,\n  referredId VARCHAR(64) NOT NULL UNIQUE,\n  level INT NOT NULL,\n  bonusPaid BOOLEAN NOT NULL DEFAULT FALSE,\n  bonusAmount INT,\n  inviteeBonusPaid BOOLEAN NOT NULL DEFAULT FALSE,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX referrer_id_idx (referrerId),\n  INDEX referred_id_idx (referredId),\n  FOREIGN KEY (referrerId) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (referredId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create withdrawals table\nCREATE TABLE withdrawals (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  amount INT NOT NULL,\n  usdtAmount INT NOT NULL,\n  conversionRate INT NOT NULL,\n  walletAddress VARCHAR(200) NOT NULL,\n  network VARCHAR(50) NOT NULL DEFAULT 'TRC20',\n  status ENUM('pending', 'processing', 'completed', 'rejected') NOT NULL DEFAULT 'pending',\n  txHash VARCHAR(200),\n  rejectionReason TEXT,\n  processedAt DATETIME,\n  processedBy VARCHAR(64),\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX user_id_idx (userId),\n  INDEX status_idx (status),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create level_requests table\nCREATE TABLE level_requests (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  fromLevel INT NOT NULL,\n  toLevel INT NOT NULL,\n  cost INT NOT NULL,\n  proofUrl TEXT,\n  status ENUM('pending', 'approved', 'rejected') NOT NULL DEFAULT 'pending',\n  rejectionReason TEXT,\n  reviewedAt DATETIME,\n  reviewedBy VARCHAR(64),\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX user_id_idx (userId),\n  INDEX status_idx (status),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create ad_revenue table\nCREATE TABLE ad_revenue (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  platform ENUM('adgem', 'adsterra', 'cpalead') NOT NULL,\n  userId VARCHAR(64),\n  amount INT NOT NULL,\n  userShare INT,\n  sharePercentage INT,\n  externalId VARCHAR(100),\n  metadata TEXT,\n  syncedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE SET NULL\n);\n\n-- Create admin_actions table\nCREATE TABLE admin_actions (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  adminId VARCHAR(64) NOT NULL,\n  action VARCHAR(100) NOT NULL,\n  targetType VARCHAR(50) NOT NULL,\n  targetId VARCHAR(100) NOT NULL,\n  details TEXT,\n  ipAddress VARCHAR(45),\n  userAgent TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX admin_id_idx (adminId),\n  INDEX action_idx (action),\n  INDEX created_at_idx (createdAt),\n  FOREIGN KEY (adminId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create settings table\nCREATE TABLE settings (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  `key` VARCHAR(100) NOT NULL UNIQUE,\n  value TEXT NOT NULL,\n  type ENUM('string', 'number', 'boolean', 'json') NOT NULL DEFAULT 'string',\n  description TEXT,\n  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  updatedBy VARCHAR(64)\n);\n\n-- Create notifications table\nCREATE TABLE notifications (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  title VARCHAR(200) NOT NULL,\n  message TEXT NOT NULL,\n  `read` BOOLEAN NOT NULL DEFAULT FALSE,\n  actionUrl TEXT,\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX user_id_idx (userId),\n  INDEX read_idx (`read`),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n",
  "command": "mysql --batch --raw --column-names --default-character-set=utf8mb4 --host gateway02.us-east-1.prod.aws.tidbcloud.com --port 4000 --user 1ePM9C8H4TRp41p.root --database Hyj3drC68AwGaUpsvZ2uJc --execute \n-- Drop existing tables if they exist\nDROP TABLE IF EXISTS notifications;\nDROP TABLE IF EXISTS admin_actions;\nDROP TABLE IF EXISTS ad_revenue;\nDROP TABLE IF EXISTS level_requests;\nDROP TABLE IF EXISTS withdrawals;\nDROP TABLE IF EXISTS referrals;\nDROP TABLE IF EXISTS user_tasks;\nDROP TABLE IF EXISTS offers;\nDROP TABLE IF EXISTS tasks;\nDROP TABLE IF EXISTS transactions;\nDROP TABLE IF EXISTS wallets;\nDROP TABLE IF EXISTS magic_link_tokens;\nDROP TABLE IF EXISTS users;\n\n-- Create users table\nCREATE TABLE users (\n  id VARCHAR(64) PRIMARY KEY,\n  username VARCHAR(50) NOT NULL UNIQUE,\n  email VARCHAR(320) NOT NULL UNIQUE,\n  fullName VARCHAR(100) NOT NULL,\n  passwordHash VARCHAR(255),\n  gender ENUM('male', 'female', 'other'),\n  birthdate DATETIME,\n  role ENUM('user', 'admin', 'super_admin') NOT NULL DEFAULT 'user',\n  status ENUM('pending', 'approved', 'suspended', 'rejected') NOT NULL DEFAULT 'pending',\n  loginMethod VARCHAR(64),\n  level INT NOT NULL DEFAULT 0,\n  referralCode VARCHAR(20) UNIQUE,\n  referredBy VARCHAR(64),\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  lastSignedIn DATETIME DEFAULT CURRENT_TIMESTAMP,\n  approvedAt DATETIME,\n  approvedBy VARCHAR(64),\n  INDEX email_idx (email),\n  INDEX username_idx (username),\n  INDEX referral_code_idx (referralCode),\n  INDEX status_idx (status)\n);\n\n-- Create magic_link_tokens table\nCREATE TABLE magic_link_tokens (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  token VARCHAR(255) NOT NULL UNIQUE,\n  userId VARCHAR(64) NOT NULL,\n  email VARCHAR(320) NOT NULL,\n  expiresAt DATETIME NOT NULL,\n  used BOOLEAN NOT NULL DEFAULT FALSE,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Create wallets table\nCREATE TABLE wallets (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL UNIQUE,\n  balance INT NOT NULL DEFAULT 0,\n  totalEarned INT NOT NULL DEFAULT 0,\n  totalWithdrawn INT NOT NULL DEFAULT 0,\n  pendingBalance INT NOT NULL DEFAULT 0,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create transactions table\nCREATE TABLE transactions (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  type ENUM('credit', 'debit', 'bonus', 'task_reward', 'referral_reward', 'withdrawal', 'level_upgrade', 'admin_adjustment') NOT NULL,\n  amount INT NOT NULL,\n  balanceBefore INT NOT NULL,\n  balanceAfter INT NOT NULL,\n  description TEXT,\n  referenceType VARCHAR(50),\n  referenceId VARCHAR(100),\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  createdBy VARCHAR(64),\n  INDEX user_id_idx (userId),\n  INDEX type_idx (type),\n  INDEX created_at_idx (createdAt),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create tasks table\nCREATE TABLE tasks (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  title VARCHAR(200) NOT NULL,\n  description TEXT NOT NULL,\n  type ENUM('manual', 'adgem', 'adsterra', 'cpalead', 'referral') NOT NULL,\n  reward INT NOT NULL,\n  proofRequired BOOLEAN NOT NULL DEFAULT TRUE,\n  maxParticipants INT,\n  currentParticipants INT NOT NULL DEFAULT 0,\n  status ENUM('active', 'paused', 'completed', 'cancelled') NOT NULL DEFAULT 'active',\n  externalId VARCHAR(100),\n  url TEXT,\n  instructions TEXT,\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  createdBy VARCHAR(64)\n);\n\n-- Create user_tasks table\nCREATE TABLE user_tasks (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  taskId INT NOT NULL,\n  status ENUM('pending', 'submitted', 'approved', 'rejected') NOT NULL DEFAULT 'pending',\n  proofUrl TEXT,\n  proofText TEXT,\n  submittedAt DATETIME,\n  reviewedAt DATETIME,\n  reviewedBy VARCHAR(64),\n  rewardAmount INT,\n  rejectionReason TEXT,\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX user_id_idx (userId),\n  INDEX task_id_idx (taskId),\n  INDEX status_idx (status),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE\n);\n\n-- Create offers table\nCREATE TABLE offers (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  platform ENUM('adgem', 'adsterra', 'cpalead') NOT NULL,\n  externalId VARCHAR(100) NOT NULL,\n  name VARCHAR(200) NOT NULL,\n  description TEXT,\n  payout INT NOT NULL,\n  url TEXT,\n  imageUrl TEXT,\n  category VARCHAR(100),\n  countries TEXT,\n  status ENUM('active', 'inactive') NOT NULL DEFAULT 'active',\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n\n-- Create referrals table\nCREATE TABLE referrals (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  referrerId VARCHAR(64) NOT NULL,\n  referredId VARCHAR(64) NOT NULL UNIQUE,\n  level INT NOT NULL,\n  bonusPaid BOOLEAN NOT NULL DEFAULT FALSE,\n  bonusAmount INT,\n  inviteeBonusPaid BOOLEAN NOT NULL DEFAULT FALSE,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX referrer_id_idx (referrerId),\n  INDEX referred_id_idx (referredId),\n  FOREIGN KEY (referrerId) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (referredId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create withdrawals table\nCREATE TABLE withdrawals (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  amount INT NOT NULL,\n  usdtAmount INT NOT NULL,\n  conversionRate INT NOT NULL,\n  walletAddress VARCHAR(200) NOT NULL,\n  network VARCHAR(50) NOT NULL DEFAULT 'TRC20',\n  status ENUM('pending', 'processing', 'completed', 'rejected') NOT NULL DEFAULT 'pending',\n  txHash VARCHAR(200),\n  rejectionReason TEXT,\n  processedAt DATETIME,\n  processedBy VARCHAR(64),\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX user_id_idx (userId),\n  INDEX status_idx (status),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create level_requests table\nCREATE TABLE level_requests (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  fromLevel INT NOT NULL,\n  toLevel INT NOT NULL,\n  cost INT NOT NULL,\n  proofUrl TEXT,\n  status ENUM('pending', 'approved', 'rejected') NOT NULL DEFAULT 'pending',\n  rejectionReason TEXT,\n  reviewedAt DATETIME,\n  reviewedBy VARCHAR(64),\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX user_id_idx (userId),\n  INDEX status_idx (status),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create ad_revenue table\nCREATE TABLE ad_revenue (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  platform ENUM('adgem', 'adsterra', 'cpalead') NOT NULL,\n  userId VARCHAR(64),\n  amount INT NOT NULL,\n  userShare INT,\n  sharePercentage INT,\n  externalId VARCHAR(100),\n  metadata TEXT,\n  syncedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE SET NULL\n);\n\n-- Create admin_actions table\nCREATE TABLE admin_actions (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  adminId VARCHAR(64) NOT NULL,\n  action VARCHAR(100) NOT NULL,\n  targetType VARCHAR(50) NOT NULL,\n  targetId VARCHAR(100) NOT NULL,\n  details TEXT,\n  ipAddress VARCHAR(45),\n  userAgent TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX admin_id_idx (adminId),\n  INDEX action_idx (action),\n  INDEX created_at_idx (createdAt),\n  FOREIGN KEY (adminId) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Create settings table\nCREATE TABLE settings (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  `key` VARCHAR(100) NOT NULL UNIQUE,\n  value TEXT NOT NULL,\n  type ENUM('string', 'number', 'boolean', 'json') NOT NULL DEFAULT 'string',\n  description TEXT,\n  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  updatedBy VARCHAR(64)\n);\n\n-- Create notifications table\nCREATE TABLE notifications (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  userId VARCHAR(64) NOT NULL,\n  type VARCHAR(50) NOT NULL,\n  title VARCHAR(200) NOT NULL,\n  message TEXT NOT NULL,\n  `read` BOOLEAN NOT NULL DEFAULT FALSE,\n  actionUrl TEXT,\n  metadata TEXT,\n  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  INDEX user_id_idx (userId),\n  INDEX read_idx (`read`),\n  FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE\n);\n",
  "rows": [],
  "messages": [],
  "stdout": "",
  "stderr": "",
  "execution_time_ms": 4251
}